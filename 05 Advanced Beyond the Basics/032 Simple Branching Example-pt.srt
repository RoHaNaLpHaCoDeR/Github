1
00:00:00,000 --> 00:00:04,200
Bem-vindo, neste vdeo, vamos criar e gerenciar outras ramificaes

2
00:00:04,200 --> 00:00:11,566
alm do mestre em nosso repositrio Git. Eu estou atualmente no repositrio Git "demo"; e, de

3
00:00:11,566 --> 00:00:16,933
um vdeo anterior, temos um "README" modificado. md "file.

4
00:00:16,933 --> 00:00:22,800
E tudo bem; talvez pretendamos que esse arquivo seja modificado experimentalmente ou como parte

5
00:00:22,800 --> 00:00:25,466
de um recurso de uma prxima atualizao.

6
00:00:25,466 --> 00:00:28,866
De qualquer forma, podemos usar ramificaes de recurso

7
00:00:28,866 --> 00:00:34,033
ou tpico para separar as alteraes que queremos fazer do mestre.

8
00:00:34,033 --> 00:00:39,233
Se usarmos o comando "git branch", poderemos ver que temos uma nica ramificao chamada master.

9
00:00:39,233 --> 00:00:42,733
E, agora, est destacado em verde e com um asterisco,

10
00:00:42,733 --> 00:00:45,333
que indica que esse  o ramo atual.

11
00:00:45,333 --> 00:00:49,266
Agora, eu poderia criar outra ramificao usando o comando

12
00:00:49,266 --> 00:00:53,900
"branch" e, em seguida, alternando separadamente para essa ramificao, mas

13
00:00:53,900 --> 00:00:58,866
posso realizar ambas usando o comando checkout com a opo "-b".

14
00:00:58,866 --> 00:01:04,300
Digite "git checkout -b", para criar o ramo; espao; e, em seguida, o nome

15
00:01:04,300 --> 00:01:08,033
do ramo que voc deseja criar e mudar para, estou

16
00:01:08,033 --> 00:01:11,000
chamando de "atualizaes"; em seguida, pressione enter.

17
00:01:11,000 --> 00:01:15,966
Agora, algumas coisas aconteceram. Um: ele criou uma nova ramificao

18
00:01:15,966 --> 00:01:20,700
chamada "atualizaes", depois mudou para essa nova ramificao e, como havia

19
00:01:20,700 --> 00:01:26,566
modificaes pendentes no diretrio de trabalho, ela levou essas modificaes para a nova ramificao.

20
00:01:26,566 --> 00:01:30,400
Essa  uma tcnica que voc pode usar quando comear a trabalhar

21
00:01:30,400 --> 00:01:35,366
no mestre e, mais tarde, voc decide que, antes de cometer, essas mudanas devem ser

22
00:01:35,366 --> 00:01:40,900
isoladas em seu prprio recurso ou ramificao de tpico. Tudo bem, vamos continuar; e, vemos

23
00:01:40,900 --> 00:01:43,800
que temos "Apenas algumas atualizaes" e

24
00:01:43,800 --> 00:01:47,300
adicionarei "em uma ramificao"; salvar e fechar.

25
00:01:47,300 --> 00:01:51,933
De volta ao terminal, vamos adicionar essas alteraes.

26
00:01:51,933 --> 00:01:56,533
E agora, vamos nos comprometer: "Adicionando atualizaes do ramo".

27
00:01:56,533 --> 00:02:01,300
timo, ento se eu fizer um "git status", isso mostra que eu estou no ramo "updates", e eu

28
00:02:01,300 --> 00:02:04,366
estou em um diretrio de trabalho limpo, sem nada para cometer.

29
00:02:04,366 --> 00:02:08,333
Se eu fizer um "git hist". Algo que deve ser notado, temos

30
00:02:08,333 --> 00:02:12,100
o commit mais recente, que est na cabea e atualizaes, mas se

31
00:02:12,100 --> 00:02:15,866
formos atrs, vemos que  o commit que o "master" est associado.

32
00:02:15,866 --> 00:02:20,333
Podemos ver quais so as mudanas usando nosso comando "diff".

33
00:02:20,333 --> 00:02:25,733
E o comando "diff" nos permitir passar os nomes dos ramos em vez de IDs de commit.

34
00:02:25,733 --> 00:02:31,666
Ento, estou usando o "git diff updates master", e isso nos mostra o que  diferente.

35
00:02:31,666 --> 00:02:36,966
Tudo bem, digamos que eu terminei com as atualizaes necessrias na ramificao "atualizaes".

36
00:02:36,966 --> 00:02:40,033
Para integrar qualquer mudana em minha

37
00:02:40,033 --> 00:02:46,333
filial, primeiro preciso mudar para minha ramificao pai, que  a principal.

38
00:02:46,333 --> 00:02:49,800
Para mudar de ramificao, usamos o comando checkout

39
00:02:49,800 --> 00:02:54,900
"git checkout", nome da ramificao; neste caso, "mestre", e pressione enter.

40
00:02:54,900 --> 00:02:59,866
timo; Agora vamos olhar para a nossa histria a partir da perspectiva do mestre.

41
00:02:59,866 --> 00:03:03,366
Novamente, isso mostra que HEAD agora est em "master",

42
00:03:03,366 --> 00:03:07,533
j que head normalmente significa o ltimo commit no branch atual.

43
00:03:07,533 --> 00:03:13,333
E, como a ramificao atual  "master", HEAD e "master" compartilham o mesmo ID de confirmao.

44
00:03:13,333 --> 00:03:19,533
Como nosso comando "hist" especifica o parmetro "--all" para nosso comando log, tambm

45
00:03:19,533 --> 00:03:24,000
notamos o id de confirmao associado  ramificao "updates".

46
00:03:24,000 --> 00:03:28,766
Bem, vamos em frente e nos fundimos nessas mudanas. Digite "git merge"; espao; e,

47
00:03:28,766 --> 00:03:34,266
em seguida, o nome da ramificao que voc deseja mesclar na ramificao atual

48
00:03:34,266 --> 00:03:38,533
e, em seguida, pressione enter. Para essa mescla,  uma mescla

49
00:03:38,533 --> 00:03:41,533
to simples que  capaz de fazer algo

50
00:03:41,533 --> 00:03:44,833
chamado fast-forward, o que significa que vamos fingir que

51
00:03:44,833 --> 00:03:48,600
voc nunca se afastou do "mestre" para fazer essas atualizaes.

52
00:03:48,600 --> 00:03:53,933
Ento, vamos aplicar esses commits diretamente ao branch master.

53
00:03:53,933 --> 00:03:58,600
Agora, se fizermos um "git hist", veremos que HEAD, "updates" e "master", todos apontam

54
00:03:58,600 --> 00:04:03,533
para o mesmo id de commit; esse  o efeito de uma fuso rpida.

55
00:04:03,533 --> 00:04:06,966
H opes para desabilitar as fuses rpidas, mesmo

56
00:04:06,966 --> 00:04:11,766
que sejam possveis, mas, na maioria das vezes, voc desejar esse comportamento.

57
00:04:11,766 --> 00:04:17,166
Depois de concluirmos a mesclagem em nossas alteraes, no precisaremos mais do ramo de atualizaes.

58
00:04:17,166 --> 00:04:21,400
Efetivamente, as ramificaes no Git so apenas rtulos de linhas do tempo e,

59
00:04:21,400 --> 00:04:26,433
uma vez que tenham sido integradas na linha do tempo principal, no h mais necessidade delas.

60
00:04:26,433 --> 00:04:31,000
Vamos usar o comando "git branch": "git branch -d", para delete;

61
00:04:31,000 --> 00:04:33,600
seguido pelo nome do ramo que

62
00:04:33,600 --> 00:04:36,766
desejamos excluir, neste caso, "atualizaes"; pressione Enter.

63
00:04:36,766 --> 00:04:39,933
timo, ns deletamos esse ramo; estamos

64
00:04:39,933 --> 00:04:43,266
de volta a apenas o ramo "mestre".

65
00:04:43,266 --> 00:04:46,500
Ns fazemos um "git hist"; vemos que no temos

66
00:04:46,500 --> 00:04:50,333
mais a ramificao "updates" associada a esse ID de confirmao.

67
00:04:50,333 --> 00:04:56,200
Nota: a histria no desapareceu, apenas o rtulo "atualizaes".

