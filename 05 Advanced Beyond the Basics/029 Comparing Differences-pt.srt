1
00:00:00,000 --> 00:00:05,900
Bem-vindo, neste vdeo, vamos comparar as diferenas com o comando "diff".

2
00:00:05,900 --> 00:00:08,833
Eu estou atualmente no repositrio Git "demo".

3
00:00:08,833 --> 00:00:13,433
Estou no mestre, sem nada para confirmar, pois estou em um diretrio de trabalho limpo.

4
00:00:13,433 --> 00:00:21,500
Eu vou usar o meu alias "hist" recm-criado para mostrar meu histrico, pelo menos at agora.

5
00:00:21,500 --> 00:00:25,566
Se eu quisesse ver as diferenas entre dois pontos de commit,

6
00:00:25,566 --> 00:00:29,000
eu poderia usar o comando "git diff" para fazer isso.

7
00:00:29,000 --> 00:00:36,700
Vou selecionar o segundo da subentrada inferior, que  "d444e90", e depois o

8
00:00:36,700 --> 00:00:41,333
segundo ponto, vou usar o ponteiro especial chamado

9
00:00:41,333 --> 00:00:45,833
"HEAD", depois aperte enter. Agora temos uma diferena entre o

10
00:00:45,833 --> 00:00:51,433
"HEAD", que  o ltimo commit no branch atual, que  master, e aquele commit especfico.

11
00:00:51,433 --> 00:00:55,800
Poderamos usar o mesmo comando, exceto usando o comando "difftool",

12
00:00:55,800 --> 00:01:00,500
novamente, os mesmos parmetros, e o Git ir lanar a ferramenta

13
00:01:00,500 --> 00:01:07,333
diff configurada, que no meu caso  o P4Merge. Como tenho vrios arquivos associados a este diff,

14
00:01:07,333 --> 00:01:13,033
vou percorrer cada um deles encerrando o P4Merge com o comando + q para

15
00:01:13,033 --> 00:01:16,400
alternar para o prximo arquivo envolvido no diff.

16
00:01:16,400 --> 00:01:20,066
Uma vez que percorremos todos os arquivos associados ao diff, o

17
00:01:20,066 --> 00:01:27,066
Git nos retorna de volta ao terminal. Eu vou modificar o "README. md "file.

18
00:01:27,066 --> 00:01:32,466
Salvei essas alteraes e agora sei que tenho um arquivo Leia-me modificado, mas no

19
00:01:32,466 --> 00:01:36,566
sei quais so essas alteraes. Mais uma vez, "git diff" para o resgate.

20
00:01:36,566 --> 00:01:40,500
Se eu apenas digitar "git diff", eu obtenho uma diferena

21
00:01:40,500 --> 00:01:42,933
entre o que foi alterado recentemente

22
00:01:42,933 --> 00:01:49,500
no diretrio de trabalho, versus a posio "HEAD" no repositrio Git, que  o ltimo commit neste branch.

23
00:01:49,500 --> 00:01:52,200
Ento, voc pode ver que, em vez

24
00:01:52,200 --> 00:01:56,433
de apenas "Ttulo 2", temos "Ttulo 2", "+ Apenas algumas atualizaes".

25
00:01:56,433 --> 00:02:00,300
Da mesma forma, se digitarmos "git difftool", fazemos

26
00:02:00,300 --> 00:02:07,200
a mesma coisa, mas podemos usar o P4Merge. L ns temos isso.

27
00:02:07,200 --> 00:02:12,333
Quando terminar de examinar as diferenas entre "HEAD" e o

28
00:02:12,333 --> 00:02:17,633
diretrio de trabalho, saia do P4Merge usando o comando + q.

29
00:02:17,633 --> 00:02:20,300
O comando "diff"  realmente extremamente poderoso; Eu

30
00:02:20,300 --> 00:02:24,700
recomendo que voc olhe para a pgina de ajuda para o comando "diff".

31
00:02:24,700 --> 00:02:27,133
Existem muitas opes diferentes, e

32
00:02:27,133 --> 00:02:31,466
 extremamente flexvel e pode ser usado em vrios casos.

33
00:02:31,466 --> 00:02:35,300
E, na maior parte, qualquer coisa que possa ser passada para

34
00:02:35,300 --> 00:02:39,366
o comando "diff" tambm pode ser passada para o comando "difftool".

