1
00:00:00,000 --> 00:00:03,500
Bem-vindo, neste vdeo, vamos vincular nosso recm-criado

2
00:00:03,500 --> 00:00:07,066
repositrio GitHub ao nosso repositrio Git local.

3
00:00:07,066 --> 00:00:12,533
Em um vdeo anterior, acabamos de criar um repositrio Git vazio no site do GitHub.

4
00:00:12,533 --> 00:00:16,900
Ao faz-lo, aterramos nesta pgina, dando-nos instrues sobre como ligar

5
00:00:16,900 --> 00:00:20,066
o repositrio do GitHub ao nosso repositrio Git.

6
00:00:20,066 --> 00:00:23,833
Para fazer isso, vamos descer e ver as instrues para enviar um repositrio existente

7
00:00:23,833 --> 00:00:27,133
a partir da linha de comando. Isso nos d dois comandos; um 

8
00:00:27,133 --> 00:00:30,566
um comando remoto do Git e o outro  um comando de envio do Git.

9
00:00:30,566 --> 00:00:34,233
Vamos copiar a primeira linha, que  control + c ou command +

10
00:00:34,233 --> 00:00:37,833
c, e agora vamos retornar ao terminal. Atualmente estou no diretrio inicial do meu usurio.

11
00:00:37,833 --> 00:00:41,033
Ento, eu preciso navegar para o nosso repositrio Git "demo".

12
00:00:41,033 --> 00:00:45,233
Ento, agora estou no repositrio Git "demo", atualmente estou no branch master,

13
00:00:45,233 --> 00:00:49,666
em um diretrio de trabalho limpo. O primeiro comando nos diz para fazer um "git remote".

14
00:00:49,666 --> 00:00:53,266
O comando "git remote" gerencia todas as conexes remotas do

15
00:00:53,266 --> 00:00:56,866
nosso repositrio local atual para um remoto ou outro repositrio

16
00:00:56,866 --> 00:01:01,300
em algum outro lugar na internet. Neste caso, no GitHub.

17
00:01:01,300 --> 00:01:06,200
Se emitirmos o comando "git remote -v", o Git responde sem nenhum resultado, o que

18
00:01:06,200 --> 00:01:08,700
significa que no temos conexes remotas definidas.

19
00:01:08,700 --> 00:01:11,600
Agora, vamos colar esse comando em nossa pgina da web do GitHub.

20
00:01:11,600 --> 00:01:15,433
Antes de pressionar enter, gosto de explicar o que este comando est prestes a fazer.

21
00:01:15,433 --> 00:01:19,000
Comeamos com "git remote" e, em seguida, um subcomando, "add".

22
00:01:19,000 --> 00:01:21,833
O subcomando "add" recebe dois parmetros: o

23
00:01:21,833 --> 00:01:24,700
nome da referncia remota que queremos criar,

24
00:01:24,700 --> 00:01:27,800
neste caso, quero nomear esta referncia "origin"; e,

25
00:01:27,800 --> 00:01:32,966
em seguida, o segundo parmetro  o URL completo para o repositrio remoto,

26
00:01:32,966 --> 00:01:36,000
que  o URL do meu repositrio do GitHub.

27
00:01:36,000 --> 00:01:40,233
Agora, neste caso, poderamos usar qualquer nome que desejssemos no lugar

28
00:01:40,233 --> 00:01:45,633
de "origin", mas por conveno, o primeiro e o repositrio remoto primrio  chamado origin.

29
00:01:45,633 --> 00:01:50,066
Mais uma vez, isso  simplesmente uma conveno. Verifique a linha e pressione enter.

30
00:01:50,066 --> 00:01:53,600
Agora, se fizermos um "git remote -v", o Git nos diz

31
00:01:53,600 --> 00:01:56,533
que temos "origin" apontando para o repositrio do GitHub.

32
00:01:56,533 --> 00:01:59,933
Agora, voc pode estar se perguntando por que temos a entrada

33
00:01:59,933 --> 00:02:04,400
listada duas vezes, e isso  porque, tecnicamente, o Git permitir ter duas URLs diferentes:

34
00:02:04,400 --> 00:02:08,666
uma para buscar e uma para empurrar. Ns vamos entrar nisso um pouco mais tarde.

35
00:02:08,666 --> 00:02:13,766
No entanto, 99% do tempo, o mesmo URL ser para ambas as entradas.

36
00:02:13,766 --> 00:02:18,600
Portanto, no se preocupe com o fato de essa entrada estar listada duas vezes.

