1
00:00:00,000 --> 00:00:06,000
In this video, I'm going to show you the commit history with "git log".

2
00:00:06,000 --> 00:00:10,233
I'm currently in my terminal, within the "demo" Git repository.

3
00:00:10,233 --> 00:00:13,900
Since we just performed a commit, we have a clean working directory;

4
00:00:13,900 --> 00:00:15,666
so there's nothing else to commit.

5
00:00:15,666 --> 00:00:20,333
To prove to you that all our changes that we just recently made are in the Git repository,

6
00:00:20,333 --> 00:00:24,600
we can use Git's log command to show our listing of commits.

7
00:00:24,600 --> 00:00:27,866
If I simply type "git log", then press enter,

8
00:00:27,866 --> 00:00:32,333
Git responds with all the commits that are part of this repository.

9
00:00:32,333 --> 00:00:36,066
Incidentally, there's only one commit; let's go through it.

10
00:00:36,066 --> 00:00:42,766
It starts off with the commit id. So we have "commit"; space; and then this long identifier:

11
00:00:42,766 --> 00:00:48,333
that's the SHA-1 identifier that's used to uniquely identify commits within a repository.

12
00:00:48,333 --> 00:00:52,700
After the commit id, we have the author, which happens to be me,

13
00:00:52,700 --> 00:00:55,566
followed by the date, then our commit message.

14
00:00:55,566 --> 00:01:01,800
In this case, we had our multi-line commit message that we entered using our core editor.

15
00:01:01,800 --> 00:01:04,866
We can get similar information by using the "show" command.

16
00:01:04,866 --> 00:01:11,866
Just type "git show", and it will show the last commit and a diff containing all the changes.

17
00:01:11,866 --> 00:01:16,300
To get out of the show command, press 'q'.

