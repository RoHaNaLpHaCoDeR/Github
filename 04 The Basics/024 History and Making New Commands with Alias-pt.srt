1
00:00:00,000 --> 00:00:04,766
Bem-vindo, nesse vdeo, vamos brincar um pouco com o comando "git log" e

2
00:00:04,766 --> 00:00:08,600
depois criar um alias do Git para encurtar um comando.

3
00:00:08,600 --> 00:00:12,333
No meu terminal, estou atualmente no repositrio Git "demo".

4
00:00:12,333 --> 00:00:15,733
Atualmente estou no branch master, sem nada para commitar,

5
00:00:15,733 --> 00:00:18,500
pois tenho um diretrio de trabalho limpo.

6
00:00:18,500 --> 00:00:24,100
Se eu digitar o comando padro "git log", vejo que tenho dois commits.

7
00:00:24,100 --> 00:00:29,466
No entanto, se eu usar o comando help do Git digitando "git help log",

8
00:00:29,466 --> 00:00:34,233
eu posso ver que tenho muitas e muitas opes disponveis para mim.

9
00:00:34,233 --> 00:00:37,900
Eu vou sair daqui; Eu sei as opes que eu quero usar.

10
00:00:37,900 --> 00:00:45,500
Portanto, vamos usar "git log --oneline", que fornecer uma entrada de confirmao simplificada, fornecendo muitas dessas

11
00:00:45,500 --> 00:00:50,000
informaes em uma nica linha, em vez de vrias linhas;

12
00:00:50,000 --> 00:00:56,966
"--graph", que fornecer um grfico baseado em asterisco denotando nossa hierarquia de ramificao; "- decore",

13
00:00:56,966 --> 00:01:02,733
que nos informar quais commits fazem parte de quais branches e outros

14
00:01:02,733 --> 00:01:07,366
labels dentro do repositrio Git; e depois "--all", que fornecer

15
00:01:07,366 --> 00:01:12,466
o histrico para todas as ramificaes que esto disponveis neste repositrio.

16
00:01:12,466 --> 00:01:17,900
Vamos pressionar enter; agora temos uma viso radicalmente diferente do nosso comando "git log".

17
00:01:17,900 --> 00:01:23,166
Esta  realmente a minha viso preferida, e eu vejo  como uma histria do Git,

18
00:01:23,166 --> 00:01:26,733
embora o Git no tenha oficialmente um comando de histrico.

19
00:01:26,733 --> 00:01:30,066
Isso no nos impede de criar um. Vamos fazer isso; vamos

20
00:01:30,066 --> 00:01:34,166
usar algo chamado aliases do Git para fazer isso.

21
00:01:34,166 --> 00:01:40,300
Para criar um alias do Git, que  basicamente um

22
00:01:40,300 --> 00:01:52,766
novo comando que  uma representao abreviada de um comando existente mais longo, vamos pegar o comando "config" do Git.

23
00:01:52,766 --> 00:02:00,500
A sintaxe  "git config --global", porque queremos que esse alias esteja no nvel do usurio, no no nvel do

24
00:02:00,500 --> 00:02:07,833
repo; espao; e depois a chave de configurao "alias. "; ento qualquer nome que voc queira

25
00:02:07,833 --> 00:02:12,866
usar para o seu novo comando, no meu caso" hist

26
00:02:12,866 --> 00:02:18,900
"; espao; e ento, entre aspas duplas, o comando, deixando de fora

27
00:02:18,900 --> 00:02:22,000
o comando" git "inicial: ento, em

28
00:02:22,000 --> 00:02:33,566
vez de" git log " , voc acabou de comear com "log", ento entre aspas duplas, eu tenho "log --oneline --graph --decorate --all".

29
00:02:33,566 --> 00:02:38,933
Verifique novamente essa linha e pressione enter.

30
00:02:38,933 --> 00:02:43,333
Ns podemos checar novamente esta entrada, listando as

31
00:02:43,333 --> 00:02:50,066
entradas de configurao do Git; "git config --global --list", depois pressione enter.

32
00:02:50,066 --> 00:03:03,100
E, no final, voc v "alias". hist = log --oneline --graph --decorate --all ".

33
00:03:03,100 --> 00:03:10,200
Tudo bem, vamos testar isso; para usar um alias, basta digitar "git"; espao; e, em seguida, o nome do alias, no meu

34
00:03:10,200 --> 00:03:14,300
caso "hist", em seguida, pressione enter. Se voc foi bem

35
00:03:14,300 --> 00:03:21,533
sucedido, voc deve ter exatamente a mesma sada que o comando "log" que tnhamos anteriormente.

36
00:03:21,533 --> 00:03:26,133
O uso de aliases no impede que voc passe

37
00:03:26,133 --> 00:03:32,300
parmetros adicionais para o comando subjacente. Ento, neste caso, se eu digitar "git hist",

38
00:03:32,300 --> 00:03:37,933
espao e depois a opo "-", espao e depois um arquivo, ento pressione enter,

39
00:03:37,933 --> 00:03:43,733
o alias "hist" ir passar o "- filename" para o comando "git log" subjacente,

40
00:03:43,733 --> 00:03:50,400
resultando no "git log" pertencente apenas  "LICENSE". md "file.

